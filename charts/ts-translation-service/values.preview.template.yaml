java:
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  environment:
    TS_TRANSLATION_SERVICE_DB_HOST: "{{ .Release.Name }}-postgresql"
    TS_TRANSLATION_SERVICE_DB_NAME: "ccd"
    TS_TRANSLATION_SERVICE_DB_USERNAME: "hmcts"
    TS_TRANSLATION_SERVICE_DB_PASSWORD: "hmcts"
    TS_TRANSLATION_SERVICE_DB_OPTIONS: "?stringtype=unspecified"
    TS_TRANSLATION_SERVICE_DB_PORT: 5432
    TESTING_SUPPORT_ENABLED: true

  keyVaults:
    ts:
      resourceGroup: ts-shared
      secrets:
        - name: AppInsightsInstrumentationKey
        - name: ts-translation-service-s2s-secret
          alias: IDAM_KEY_TS_TRANSLATION_SERVICE

ccd:
  enabled: true
  ccd:
    s2s:
      enabled: false
    userProfile:
      enabled: false
    dataStore:
      enabled: false
    definitionImporter:
      enabled: false
    userProfileImporter:
      enabled: true
    ras:
      enabled: false
    postgresql:
      enabled: true
      primary:
        initdb:
          scripts:
            init.sql: |
              CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "draftstore" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "payment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "evidence" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "annotation" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "role_assignment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
              CREATE DATABASE "ts_translation_service" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    definitionStore:
      enabled: true
    adminWeb:
      enabled: true
      
  global:
    ccdAdminWebIngress:  ccd-admin-web-${SERVICE_FQDN}
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    ccdDefinitionStoreUrl: http://${SERVICE_NAME}-ccd-definition-store
    enableKeyVaults: true
    devMode: true
    postgresql:
      auth:
        postgresUsername: hmcts
        postgresPassword: hmcts

    
  ccd-definition-store-api:
    java:
      ingressHost: ccd-def-store-${SERVICE_FQDN}
      image: hmctspublic.azurecr.io/ccd/definition-store-api:pr-1386-f6ed51d-20230829104932
      environment:
        TS_TRANSLATION_SERVICE_HOST: ${SERVICE_FQDN}
        ELASTIC_SEARCH_FAIL_ON_IMPORT: false
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
        USER_PROFILE_HOST: http://ccd-user-profile-api-aat.service.core-compute-aat.internal
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
       
  ccd-admin-web:
    nodejs:
      ingressHost:  ccd-admin-web-${SERVICE_FQDN}
      image: hmctspublic.azurecr.io/ccd/admin-web:pr-582-ff6134d-20230829130829
      environment:
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}
   
